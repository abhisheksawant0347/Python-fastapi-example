name: Docker Image python fast api

on:
  push:
    branches: 
      - main1

  workflow_dispatch:

permissions:
  contents: read

jobs:
  build_push_ACR:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    - name: Build the Docker image 
      run: |
         docker build . -t pythontestrepo.azurecr.io/python-test:latest
         docker images
         
    - uses: azure/docker-login@v1
      with:
        login-server: pythontestrepo.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Push docker image to ACR repo.
      run: |
          docker push pythontestrepo.azurecr.io/python-test:latest
  
  build_push_GHCR:
    runs-on: ubuntu-latest
    needs: build_push_ACR
    steps:
    - name: 'Login to GitHub Container Registry'
      uses: docker/login-action@v1
      with:
         registry: ghcr.io
         username: abhisheksawant0347
         password: ${{secrets.SECRET_GITHUB}}
         
    - uses: actions/checkout@v4
    - name: Build the Docker image 
      run: |
         docker build . --tag ghcr.io/abhisheksawant0347/python-app-test:latest
         docker push ghcr.io/abhisheksawant0347/python-app-test:latest
         docker images

  #Deploy:
  # needs:  build_push_GHCR
  # runs-on: ubuntu-latest
  # env:
  #    CLIENT_ID: ${{secrets.CLIENT_ID}}
  #    CLIENT_SECRECT: ${{secrets.CLIENT_SECRECT}}
  #    SUBSCRIPTION_ID: ${{secrets.SUBSCRIPTION_ID}}
  #    TENANT_ID: ${{secrets.TENANT_ID}}
      
  # steps:
  #  - uses: actions/checkout@v4
  #  - name: Setup kubectl
  #    uses: azure/setup-kubectl@v3
      
    #- name: 'Az CLI Login'
    #  uses: azure/login@v2
    #  with:
    #    ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
    #    ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
    #    ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
    #    ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}

    #- name: Connect to aks cluster
    #  run: |
    #      az login --service-principal --username ${{ secrets.CLIENT_ID }} --password ${{ secrets.CLIENT_SECRET }} --tenant ${{ secrets.TENANT_ID }}

    #- name: Set AKS cluster connect
    #  run: |
    #   az account set --subscription ${{ secrets.SUBSCRIPTION }}
    #   az aks get-credentials --resource-group python-test-rg --name kubernetes-test-env

    #- uses: Azure/aks-set-context@v1
    #  with:
    #    creds: ${{ secrets.AZURE_CREDENTIALS }}
    #    cluster-name: kubernetes-test-env
    #    resource-group: python-test-rg
        
    #- name: Set AKS cluster connect
    #  run: |
    #    az account set --subscription ${{ secrets.SUBSCRIPTION }}
    #    az aks get-credentials --resource-group python-test-rg --name kubernetes-test-env
    
    #- name: Deploy to AKS Cluster
    #  run: |
    #      pwd 
    #      kubectl apply -f deployment.yml 
    #      kubectl get pods
    #      kubectl get svc
    #      sleep 1m
    #      kubectl get svc
          
    #- name: deploy the app
    #  run: |
    #     echo 'Application is deployed'
